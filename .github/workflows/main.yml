name: Build and test Docker image

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      COMPOSE_FILE: ./test/docker-compose.yml

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks out repository under $GITHUB_WORKSPACE, so the job can access it
      - name: Checkout
        uses: actions/checkout@v2

      # Set up python 3.6 for linting and comics test script
      - name: Set up python3.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      # Install pyflakes linter, pillow dependency for comics test script, and fetch testing IRCd
      - name: Install python dependencies
        run: |
          pip install pyflakes
          pip install pillow
          git clone -b desertbot --single-branch https://github.com/DesertBot/weercd.git

      # Lint entire project
      - name: Lint with pyflakes
        run: pyflakes start.py desertbot/

      # Check correctness of comics data
      - name: Comics test
        run: python test/comics.py

      # TODO decrypt test/api_keys.json.enc, needs something added to github secrets to decrypt with


      # Build desertbot docker image
      - name: Docker build
        run: docker-compose build

      # Run tests against weercd
      # TODO: maybe just run weercd also in docker?
      - name: Docker build & tests
        run: |
          python weercd/weercd.py --file test/test_commands.txt -w 25.0 -s 0.25 &
          docker-compose up desertbot

      # TODO: Login to docker hub, needs credentials added to github repo secrets
      #- name: Docker login
      #  uses: docker/login-action@v1
      #  with:
      #    username: ${{ secrets.DOCKERHUB_USERNAME }}
      #    password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # TODO: Push image to docker hub
      #- name: Docker push
      #  run: |
      #    docker push starlitghost/desertbot:latest
